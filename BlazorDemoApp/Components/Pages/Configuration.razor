@page "/Configuration"
@using BlazorDemoApp.Components.Controls
@rendermode InteractiveServer
@attribute [StreamRendering]
@inject NavigationManager NavigationManager

<PageTitle>Configuration</PageTitle>

<h1>Configuration Page</h1>

<button class="btn btn-primary" @onclick="CreateVectors">Create Vectors</button>
<br />
<select @bind="SelectedModel">
    @foreach (var model in AvailableModels)
    {
        <option value="@model">@model</option>
    }
</select>
<button @onclick="ChangeModel">Apply</button>

@foreach (var line in lines)
{
    <div>@line</div>
}

@code {
    private bool IsLoading = false;
    private List<string> lines = new();
    private string SelectedModel = "";
    private List<string> AvailableModels = new() { "llama-3.2-3b-instruct", "deepseek-r1-distill-qwen-7b", "mathstral-7b-v0.", "llama-3.2-1b-instruct" };

    private async Task CreateVectors()
    {
        lines = new List<string> {"Creating vectors"};
        Console.WriteLine("SubmitQuestion called!");
        IsLoading = true;

        using var http = new HttpClient
            {
                BaseAddress = new Uri(NavigationManager.BaseUri)
            };

        var request = new HttpRequestMessage(HttpMethod.Post, "config/vectorize-db");

        var response = await http.SendAsync(request, HttpCompletionOption.ResponseHeadersRead);
        using var stream = await response.Content.ReadAsStreamAsync();
        using var reader = new StreamReader(stream);

        while (!reader.EndOfStream)
        {
            var line = reader.ReadLine();
            lines.Add(line ?? "");
            StateHasChanged();
            await Task.Delay(1);
        }

        IsLoading = false;
        StateHasChanged();
    }

    private async Task ChangeModel()
    {
        var content = new StringContent(SelectedModel);
        using var http = new HttpClient
            {
                BaseAddress = new Uri(NavigationManager.BaseUri)
            };

        var response = await http.PostAsync("config/change-model", content);

        if (response.IsSuccessStatusCode)
        {
            lines = new List<string> { $"Model changed to {SelectedModel}" };
        }
        else
        {
            lines = new List<string> { "Failed to change model." };
        }
    }
}
